<div title="" class="JSControl UzCompositeControl  Width-XS FloatLeft" id="defaultLayout" style="margin: 0em;" data-control-type="CommonChildDiv" data-obj="{&quot;fieldName&quot;:&quot;defaultLayout&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;CommonChildDiv&quot;,&quot;width&quot;:&quot;XS&quot;,&quot;visible&quot;:true,&quot;displayNone&quot;:false,&quot;disabled&quot;:false,&quot;accessKey&quot;:&quot;&quot;,&quot;nextFocusFieldName&quot;:&quot;&quot;,&quot;wrap&quot;:false,&quot;float&quot;:0,&quot;toolTip&quot;:&quot;&quot;,&quot;authorityMode&quot;:0,&quot;marginLeft&quot;:&quot;0em&quot;,&quot;marginRight&quot;:&quot;0em&quot;,&quot;selectControlID&quot;:&quot;defaultLayout&quot;,&quot;helpMessageID&quot;:&quot;&quot;,&quot;jpControlName&quot;:&quot;&quot;,&quot;authorityID&quot;:&quot;&quot;,&quot;relation&quot;:[],&quot;packageName&quot;:&quot;&quot;,&quot;businessId&quot;:&quot;AFA&quot;,&quot;controlName&quot;:&quot;RyojikanSelectDialog&quot;,&quot;marginTop&quot;:&quot;0em&quot;,&quot;marginBottom&quot;:&quot;0em&quot;,&quot;dataPassingForDialog&quot;:[{&quot;key&quot;:&quot;selectedCode&quot;,&quot;controlName&quot;:&quot;RyojikanSelectDialog.txtHdnSelectedCode&quot;},{&quot;key&quot;:&quot;selectedName&quot;,&quot;controlName&quot;:&quot;RyojikanSelectDialog.txtHdnSelectedName&quot;}],&quot;dialogOkEventNameForDialog&quot;:&quot;onSelectBySelectButton_closeOK&quot;,&quot;dialogCancelEventNameForDialog&quot;:&quot;CloseCancel&quot;,&quot;dialogCloseEventNameForDialog&quot;:&quot;&quot;,&quot;heightForDialog&quot;:&quot;XL&quot;,&quot;firstFocusFieldName&quot;:&quot;&quot;,&quot;lastFocusFieldName&quot;:&quot;&quot;,&quot;modes&quot;:[],&quot;publicEvents&quot;:[],&quot;publicEventsAlias&quot;:[],&quot;responsiveType&quot;:0,&quot;minWidth&quot;:&quot;&quot;,&quot;minHeight&quot;:&quot;&quot;,&quot;widthPercent&quot;:&quot;&quot;,&quot;heightPercent&quot;:&quot;&quot;,&quot;enterKeyAssignedControl&quot;:&quot;&quot;,&quot;anchorPosition&quot;:&quot;&quot;,&quot;EditTypes&quot;:{&quot;_editTypes&quot;:[]}}" data-is-composite-control="true" data-control-name="AFA.RyojikanSelectDialog"><div title="" class="UzPanel Panel-Shadow FloatLeft JSControl Panel UzPanelAndText panelMarginTop-M panelMarginBottom-M StateChangable marginRight-Default marginTop-Default marginBottom-Default UzCommonChildDivPanel Width-G9 UzCompositeChild" id="RyojikanSelectDialog" style="width: auto; margin-top: 0px; margin-bottom: 0px; margin-left: 0em;" data-control-type="Panel" data-obj="{&quot;fieldName&quot;:&quot;RyojikanSelectDialog&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;Panel&quot;,&quot;width&quot;:&quot;G9&quot;,&quot;marginLeft&quot;:&quot;0em&quot;,&quot;marginRight&quot;:&quot;Default&quot;,&quot;selectControlID&quot;:&quot;RyojikanSelectDialog&quot;,&quot;title&quot;:&quot;領事官選択&quot;,&quot;canOpenAndClose&quot;:false,&quot;postParameterPanelNames&quot;:[{&quot;postParameterPanelNames&quot;:&quot;RyojikanSelectDialog&quot;}],&quot;requestSettings&quot;:[{&quot;eventName&quot;:&quot;onLoad&quot;,&quot;requestUrl&quot;:&quot;afa/af/afa/RyojikanSelectDialog/onLoad&quot;},{&quot;eventName&quot;:&quot;onActive&quot;,&quot;requestUrl&quot;:&quot;&quot;},{&quot;eventName&quot;:&quot;onSelectBySelectButton_closeOK&quot;,&quot;requestUrl&quot;:&quot;afa/af/afa/RyojikanSelectDialog/onSelectBySelectButton_closeOK&quot;}],&quot;hiddenInput&quot;:[{&quot;propertyName&quot;:&quot;txtHdnSelectedCode&quot;,&quot;value&quot;:&quot;&quot;},{&quot;propertyName&quot;:&quot;txtHdnSelectedName&quot;,&quot;value&quot;:&quot;&quot;}],&quot;session&quot;:{},&quot;canPost&quot;:true}"><div class="UzPanelHeader" id="RyojikanSelectDialog_panel_header_area" style="width: auto; display: block;"><span class="closeIconSpan ui-icon ui-icon-circle-close" style="display: none;"></span><span class="iconSpan ui-icon ui-icon-circle-triangle-n" style="visibility: hidden;"></span><span class="textSpan">領事官選択</span><div class="groupBoxBorder" style="display: none;"></div></div><div class="UzPanelBody ui-widget-content panelPadding-M ui-droppable ui-sortable" id="RyojikanSelectDialog_panel_body_area"><div title="" class="UzDataGrid FloatLeft JSControl controlMargin-M ClearFloat marginLeft-XS marginRight-XS Height-M UzCompositeChild" id="dgRyojikanSelect" style="width: 760px;" data-control-type="DataGrid" data-obj="{&quot;fieldName&quot;:&quot;dgRyojikanSelect&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;DataGrid&quot;,&quot;width&quot;:&quot;760px&quot;,&quot;wrap&quot;:true,&quot;selectControlID&quot;:&quot;dgRyojikanSelect&quot;,&quot;height&quot;:&quot;M&quot;,&quot;gridSetting&quot;:{&quot;rowHeight&quot;:25,&quot;isMultiSelectable&quot;:false,&quot;isShowHeader&quot;:true,&quot;isShowFilter&quot;:false,&quot;isShowFilterButton&quot;:true,&quot;isShowClearSortButton&quot;:false,&quot;isShowSelectedRowCount&quot;:false,&quot;isShowFooter&quot;:true,&quot;isShowRowState&quot;:false,&quot;columns&quot;:[{&quot;columnName&quot;:&quot;コード&quot;,&quot;headerHtml&quot;:&quot;&quot;,&quot;string&quot;:&quot;&quot;,&quot;toolTip&quot;:&quot;&quot;,&quot;authorityID&quot;:&quot;&quot;,&quot;sortKey&quot;:&quot;txtRyojikanCode&quot;,&quot;bgColor&quot;:0,&quot;width&quot;:60,&quot;visible&quot;:true,&quot;cellType&quot;:0,&quot;cellDetails&quot;:{&quot;cellType&quot;:0},&quot;align&quot;:0,&quot;resize&quot;:false,&quot;isPrivateInfo&quot;:false,&quot;authorityMode&quot;:0,&quot;dataName&quot;:&quot;txtRyojikanCode&quot;},{&quot;columnName&quot;:&quot;領事官名&quot;,&quot;headerHtml&quot;:&quot;&quot;,&quot;string&quot;:&quot;&quot;,&quot;toolTip&quot;:&quot;&quot;,&quot;authorityID&quot;:&quot;&quot;,&quot;sortKey&quot;:&quot;txtRyojikanName&quot;,&quot;bgColor&quot;:0,&quot;width&quot;:310,&quot;visible&quot;:true,&quot;cellType&quot;:0,&quot;cellDetails&quot;:{&quot;cellType&quot;:0},&quot;align&quot;:0,&quot;resize&quot;:true,&quot;isPrivateInfo&quot;:false,&quot;authorityMode&quot;:0,&quot;dataName&quot;:&quot;txtRyojikanName&quot;},{&quot;columnName&quot;:&quot;領事官カナ名&quot;,&quot;headerHtml&quot;:&quot;&quot;,&quot;string&quot;:&quot;&quot;,&quot;toolTip&quot;:&quot;&quot;,&quot;authorityID&quot;:&quot;&quot;,&quot;sortKey&quot;:&quot;txtKanaRyojikanName&quot;,&quot;bgColor&quot;:0,&quot;width&quot;:320,&quot;visible&quot;:true,&quot;cellType&quot;:0,&quot;cellDetails&quot;:{&quot;cellType&quot;:0},&quot;align&quot;:0,&quot;resize&quot;:true,&quot;isPrivateInfo&quot;:false,&quot;authorityMode&quot;:0,&quot;dataName&quot;:&quot;txtKanaRyojikanName&quot;},{&quot;columnName&quot;:&quot;表示順&quot;,&quot;headerHtml&quot;:&quot;&quot;,&quot;string&quot;:&quot;&quot;,&quot;toolTip&quot;:&quot;&quot;,&quot;authorityID&quot;:&quot;&quot;,&quot;sortKey&quot;:&quot;txtHyojijun&quot;,&quot;bgColor&quot;:0,&quot;width&quot;:60,&quot;visible&quot;:false,&quot;cellType&quot;:0,&quot;cellDetails&quot;:{&quot;cellType&quot;:0},&quot;align&quot;:0,&quot;resize&quot;:false,&quot;isPrivateInfo&quot;:false,&quot;authorityMode&quot;:0,&quot;dataName&quot;:&quot;txtHyojijun&quot;}],&quot;header&quot;:{&quot;combineColumns&quot;:[],&quot;frozenColumn&quot;:&quot;&quot;,&quot;headerHeight&quot;:0,&quot;groupHeaderHeight&quot;:0},&quot;isShowSelectButtonColumn&quot;:true,&quot;isShowModifyButtonColumn&quot;:false,&quot;isShowDeleteButtonColumn&quot;:false,&quot;isShowCancelButtonColumn&quot;:false,&quot;limitRowCount&quot;:0,&quot;selectedRowCount&quot;:0,&quot;selectLimitRowCount&quot;:0},&quot;confirmDialog&quot;:[{&quot;button&quot;:&quot;selectButton&quot;,&quot;showDialog&quot;:false,&quot;title&quot;:&quot;&quot;,&quot;messageBody&quot;:&quot;&quot;,&quot;okButtonValue&quot;:&quot;&quot;,&quot;cancelButtonValue&quot;:&quot;&quot;},{&quot;button&quot;:&quot;modifyButton&quot;,&quot;showDialog&quot;:false,&quot;title&quot;:&quot;&quot;,&quot;messageBody&quot;:&quot;&quot;,&quot;okButtonValue&quot;:&quot;&quot;,&quot;cancelButtonValue&quot;:&quot;&quot;},{&quot;button&quot;:&quot;deleteButton&quot;,&quot;showDialog&quot;:false,&quot;title&quot;:&quot;&quot;,&quot;messageBody&quot;:&quot;&quot;,&quot;okButtonValue&quot;:&quot;&quot;,&quot;cancelButtonValue&quot;:&quot;&quot;},{&quot;button&quot;:&quot;cancelButton&quot;,&quot;showDialog&quot;:false,&quot;title&quot;:&quot;&quot;,&quot;messageBody&quot;:&quot;&quot;,&quot;okButtonValue&quot;:&quot;&quot;,&quot;cancelButtonValue&quot;:&quot;&quot;}],&quot;onSelectByDblClick&quot;:&quot;onSelectBySelectButton_closeOK&quot;,&quot;onSelectBySelectButton&quot;:&quot;onSelectBySelectButton_closeOK&quot;,&quot;dataSource&quot;:[],&quot;filterList&quot;:[],&quot;gridAction&quot;:[]}"><div id="dgRyojikanSelect_grid_table" role="" style="width: 760px; height: 365px; position: relative;"></div><div id="dgRyojikanSelect_footer" style="width: 760px; height: 25px;"></div></div><button title="" class="UzButton JSControl controlMargin-M ClearFloat FloatRight marginLeft-XS marginRight-XS Width-XS UzCompositeChild" id="btnCancel" type="button" data-control-type="Button" data-obj="{&quot;fieldName&quot;:&quot;btnCancel&quot;,&quot;items&quot;:[],&quot;controlType&quot;:&quot;Button&quot;,&quot;wrap&quot;:true,&quot;float&quot;:2,&quot;selectControlID&quot;:&quot;btnCancel&quot;,&quot;onClick&quot;:&quot;CloseCancel&quot;,&quot;text&quot;:&quot;取消&quot;}"><span>取消</span></button></div></div> 
<script type="text/javascript">var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
var AFA;
(function (AFA) {
    var ShisetsuSelectDialog_Design = (function (_super) {
        __extends(ShisetsuSelectDialog_Design, _super);
        function ShisetsuSelectDialog_Design($parentElement, isDesignMode, fieldName) {
            _super.call(this, $parentElement, isDesignMode, ShisetsuSelectDialog_Design.myLayout, fieldName);
        }
        ShisetsuSelectDialog_Design.prototype.registProperty = function () {
            _super.prototype.registProperty.call(this);
        };

        ShisetsuSelectDialog_Design.prototype.getEditablePropertyInfo = function () {
            var editablePropertyInfo = _super.prototype.getEditablePropertyInfo.call(this);

            return editablePropertyInfo;
        };
        ShisetsuSelectDialog_Design.myLayout = {
            "fieldName": "defaultLayout",
            "items": [
                {
                    "fieldName": "ShisetsuSelectDialog",
                    "items": [
                        {
                            "fieldName": "ddlShisetsuShubetsu",
                            "items": [],
                            "controlType": "DropDownList",
                            "width": "M",
                            "visible": true,
                            "displayNone": false,
                            "disabled": false,
                            "accessKey": "",
                            "nextFocusFieldName": "",
                            "wrap": false,
                            "dependencies": [],
                            "float": 0,
                            "toolTip": "",
                            "authorityMode": 0,
                            "marginLeft": "XS",
                            "marginRight": "XS",
                            "selectControlID": "ddlShisetsuShubetsu_core",
                            "helpMessageID": "",
                            "jpControlName": "",
                            "readOnly": false,
                            "onFocus": "",
                            "onBlur": "",
                            "onChange": "onChange_ddlShisetsuShubetsu",
                            "labelLText": "施設種別",
                            "labelRText": "",
                            "labelLWidth": "",
                            "labelRWidth": "S",
                            "labelLAlign": 2,
                            "labelRAlign": 0,
                            "selectedItem": "00",
                            "dataSource": [
                                {
                                    "key": "00",
                                    "value": "すべて"
                                },
                                {
                                    "key": "01",
                                    "value": "一般（本庁）"
                                },
                                {
                                    "key": "02",
                                    "value": "一般（支所）"
                                },
                                {
                                    "key": "03",
                                    "value": "病院"
                                },
                                {
                                    "key": "04",
                                    "value": "施設"
                                },
                                {
                                    "key": "05",
                                    "value": "郵便"
                                },
                                {
                                    "key": "06",
                                    "value": "他市町村"
                                },
                                {
                                    "key": "07",
                                    "value": "他施設"
                                },
                                {
                                    "key": "08",
                                    "value": "船舶"
                                },
                                {
                                    "key": "09",
                                    "value": "刑事施設等"
                                },
                                {
                                    "key": "10",
                                    "value": "少年院等"
                                },
                                {
                                    "key": "11",
                                    "value": "特定国外派遣組織"
                                },
                                {
                                    "key": "12",
                                    "value": "南極地域調査組織"
                                }
                            ],
                            "isBlankLine": false
                        },
                        {
                            "fieldName": "dgShisetsuSelect",
                            "items": [],
                            "controlType": "DataGrid",
                            "width": "760px",
                            "visible": true,
                            "displayNone": false,
                            "disabled": false,
                            "accessKey": "",
                            "nextFocusFieldName": "",
                            "wrap": true,
                            "dependencies": [],
                            "float": 0,
                            "toolTip": "",
                            "authorityMode": 0,
                            "marginLeft": "XS",
                            "marginRight": "XS",
                            "selectControlID": "dgShisetsuSelect",
                            "helpMessageID": "",
                            "jpControlName": "",
                            "readOnly": false,
                            "height": "M",
                            "dataSource": [],
                            "gridSetting": {
                                "rowHeight": 25,
                                "isMultiSelectable": false,
                                "isShowHeader": true,
                                "isShowFooter": true,
                                "isShowFilter": false,
                                "isShowFilterButton": true,
                                "isShowRowState": false,
                                "isShowSelectButtonColumn": true,
                                "isShowModifyButtonColumn": false,
                                "isShowDeleteButtonColumn": false,
                                "header": {
                                    "combineColumns": [],
                                    "frozenColumn": "",
                                    "headerHeight": 0
                                },
                                "columns": [
                                    {
                                        "columnName": "コード",
                                        "dataName": "txtShisetsuCode",
                                        "toolTip": "",
                                        "bgColor": 0,
                                        "width": 60,
                                        "visible": true,
                                        "cellType": 0,
                                        "cellDetails": {
                                            "cellType": 0
                                        },
                                        "align": 0,
                                        "resize": false,
                                        "isPrivateInfo": false,
                                        "sortKey": "txtShisetsuCode"
                                    },
                                    {
                                        "columnName": "施設名称",
                                        "dataName": "txtShisetsuName",
                                        "toolTip": "",
                                        "bgColor": 0,
                                        "width": 310,
                                        "visible": true,
                                        "cellType": 0,
                                        "cellDetails": {
                                            "cellType": 0
                                        },
                                        "align": 0,
                                        "resize": true,
                                        "isPrivateInfo": false,
                                        "sortKey": "txtShisetsuName"
                                    },
                                    {
                                        "columnName": "施設カナ",
                                        "dataName": "txtKanaShisetsuName",
                                        "toolTip": "",
                                        "bgColor": 0,
                                        "width": 200,
                                        "visible": true,
                                        "cellType": 0,
                                        "cellDetails": {
                                            "cellType": 0
                                        },
                                        "align": 0,
                                        "resize": true,
                                        "isPrivateInfo": false,
                                        "sortKey": "txtKanaShisetsuName"
                                    },
                                    {
                                        "columnName": "施設種別",
                                        "dataName": "txtShisetsuShubetsu",
                                        "toolTip": "",
                                        "bgColor": 0,
                                        "width": 150,
                                        "visible": true,
                                        "cellType": 0,
                                        "cellDetails": {
                                            "cellType": 0
                                        },
                                        "align": 0,
                                        "resize": false,
                                        "isPrivateInfo": false,
                                        "sortKey": "txtShisetsuShubetsu"
                                    },
                                    {
                                        "columnName": "施設種別コード",
                                        "dataName": "txtShisetsuShubetsuCode",
                                        "toolTip": "",
                                        "bgColor": 0,
                                        "width": 100,
                                        "visible": false,
                                        "cellType": 0,
                                        "cellDetails": null,
                                        "align": 0,
                                        "resize": false,
                                        "isPrivateInfo": false,
                                        "sortKey": ""
                                    }
                                ]
                            },
                            "onSort": "",
                            "onSelect": "",
                            "onSelectByDblClick": "onSelectBySelectButton_closeOK",
                            "onSelectBySelectButton": "onSelectBySelectButton_closeOK",
                            "onSelectByModifyButton": "",
                            "onSelectByDeleteButton": "",
                            "onAfterRequest": "",
                            "onAfterRequestByDblClick": "",
                            "onAfterRequestBySelectButton": "",
                            "onAfterRequestByModifyButton": "",
                            "onAfterRequestByDeleteButton": "",
                            "onOnlyRow": "",
                            "onNoRow": "",
                            "onMultiRows": "",
                            "sortOrder": "",
                            "isAscending": true,
                            "filterList": [],
                            "activeRowId": -1,
                            "gridAction": []
                        },
                        {
                            "fieldName": "btnCancel",
                            "items": [],
                            "controlType": "Button",
                            "width": "XS",
                            "visible": true,
                            "displayNone": false,
                            "disabled": false,
                            "accessKey": "",
                            "nextFocusFieldName": "",
                            "wrap": true,
                            "dependencies": [],
                            "float": 2,
                            "toolTip": "",
                            "authorityMode": 0,
                            "marginLeft": "XS",
                            "marginRight": "XS",
                            "selectControlID": "btnCancel",
                            "helpMessageID": "",
                            "jpControlName": "",
                            "text": "取消",
                            "imageWidth": "",
                            "imageHeight": "",
                            "onBeforeClick": "",
                            "onAfterClick": "",
                            "onClick": "CloseCancel",
                            "appearance": 0,
                            "imageFileUrl": "",
                            "icon": 0,
                            "heightTextBoxMatches": false
                        }
                    ],
                    "controlType": "Panel",
                    "width": "G9",
                    "visible": true,
                    "displayNone": false,
                    "disabled": false,
                    "accessKey": "",
                    "nextFocusFieldName": "",
                    "wrap": false,
                    "dependencies": [],
                    "float": 0,
                    "toolTip": "",
                    "authorityMode": 0,
                    "marginLeft": "0em",
                    "marginRight": "Default",
                    "selectControlID": "ShisetsuSelectDialog",
                    "helpMessageID": "",
                    "jpControlName": "",
                    "onLoad": "",
                    "title": "施設選択",
                    "marginTop": "Default",
                    "marginBottom": "Default",
                    "isOpen": true,
                    "canOpenAndClose": false,
                    "postParameterPanelNames": [
                        {
                            "postParameterPanelNames": "ShisetsuSelectDialog"
                        }
                    ],
                    "requestSettings": [
                        {
                            "eventName": "onLoad",
                            "requestUrl": "afa/af/afa/ShisetsuSelectDialog/onLoad"
                        },
                        {
                            "eventName": "onChange_ddlShisetsuShubetsu",
                            "requestUrl": "afa/af/afa/ShisetsuSelectDialog/onChange_ddlShisetsuShubetsu"
                        },
                        {
                            "eventName": "onSelectBySelectButton_closeOK",
                            "requestUrl": "afa/af/afa/ShisetsuSelectDialog/onSelectBySelectButton_closeOK"
                        }
                    ],
                    "hiddenInput": [
                        {
                            "propertyName": "txtHdnSelectedCode",
                            "value": ""
                        },
                        {
                            "propertyName": "txtHdnSelectedName",
                            "value": ""
                        }
                    ],
                    "onOpen": "",
                    "onClose": "",
                    "session": {},
                    "eraseBorder": false,
                    "backgroundColor": 0,
                    "widthAuto": true,
                    "panelDisplay": 0,
                    "isGroupBox": false,
                    "readOnly": false,
                    "height": "Auto",
                    "canPost": true
                }
            ],
            "controlType": "CommonChildDiv",
            "width": "XS",
            "visible": true,
            "displayNone": false,
            "disabled": false,
            "accessKey": "",
            "nextFocusFieldName": "",
            "wrap": false,
            "dependencies": [],
            "float": 0,
            "toolTip": "",
            "authorityMode": 0,
            "marginLeft": "0em",
            "marginRight": "0em",
            "selectControlID": "defaultLayout",
            "helpMessageID": "",
            "jpControlName": "",
            "relation": [],
            "packageName": "",
            "businessId": "AFA",
            "controlName": "ShisetsuSelectDialog",
            "marginTop": "0em",
            "marginBottom": "0em",
            "originalProperty": [],
            "dataPassingForDialog": [
                {
                    "key": "selectedCode",
                    "controlName": "ShisetsuSelectDialog.txtHdnSelectedCode"
                },
                {
                    "key": "selectedName",
                    "controlName": "ShisetsuSelectDialog.txtHdnSelectedName"
                }
            ],
            "dialogOkEventNameForDialog": "onSelectBySelectButton_closeOK",
            "dialogCancelEventNameForDialog": "CloseCancel",
            "canTransferEvent": true,
            "heightForDialog": "XL",
            "firstFocusFieldName": "",
            "lastFocusFieldName": "",
            "modes": [],
            "publicEvents": [],
            "publicEventsAlias": []
        };
        return ShisetsuSelectDialog_Design;
    })(Uz.CommonChildDiv);
    AFA.ShisetsuSelectDialog_Design = ShisetsuSelectDialog_Design;

    (function (ShisetsuSelectDialog) {
        var Events = (function () {
            function Events() {
            }
            Events.onChange_ddlShisetsuShubetsu = function () {
                return "onChange_ddlShisetsuShubetsu";
            };

            Events.onSelectBySelectButton_closeOK = function () {
                return "onSelectBySelectButton_closeOK";
            };

            Events.CloseCancel = function () {
                return "CloseCancel";
            };
            return Events;
        })();
        ShisetsuSelectDialog.Events = Events;

        var Controls = (function () {
            function Controls(fieldName) {
                this._myName = fieldName;
            }
            Controls.myType = function () {
                return "ShisetsuSelectDialog";
            };

            Controls.prototype.convFiledNameSelf = function () {
                return this._myName + "_" + AFA.ShisetsuSelectDialog.Controls.myType();
            };

            Controls.prototype.convFiledName = function (fieldName) {
                return this._myName + "_" + fieldName;
            };

            Controls.prototype.ShisetsuSelectDialog = function () {
                return new UZA.Panel(this.convFiledNameSelf());
            };

            Controls.prototype.ddlShisetsuShubetsu = function () {
                return new UZA.DropDownList(this.convFiledName("ddlShisetsuShubetsu"));
            };

            Controls.prototype.dgShisetsuSelect = function () {
                return new UZA.DataGrid(this.convFiledName("dgShisetsuSelect"));
            };

            Controls.prototype.btnCancel = function () {
                return new UZA.Button(this.convFiledName("btnCancel"));
            };
            return Controls;
        })();
        ShisetsuSelectDialog.Controls = Controls;
    })(AFA.ShisetsuSelectDialog || (AFA.ShisetsuSelectDialog = {}));
    var ShisetsuSelectDialog = AFA.ShisetsuSelectDialog;
})(AFA || (AFA = {}));

var AFA;
(function (AFA) {
    (function (ShisetsuSelectDialog) {
        var ModeController = (function () {
            function ModeController(fieldName) {
                this.fieldName = fieldName;
                this.controls = new ShisetsuSelectDialog.Controls(fieldName);
            }
            ModeController.prototype.priorities = function () {
                return [];
            };

            ModeController.prototype.Properties = function () {
                return new UZA.CommonChildDiv(this.fieldName);
            };
            return ModeController;
        })();
        ShisetsuSelectDialog.ModeController = ModeController;
    })(AFA.ShisetsuSelectDialog || (AFA.ShisetsuSelectDialog = {}));
    var ShisetsuSelectDialog = AFA.ShisetsuSelectDialog;
})(AFA || (AFA = {}));

var AFA;
(function (AFA) {
    (function (ShisetsuSelectDialog) {
        var PublicProperties = (function () {
            function PublicProperties(fieldName) {
                this.controls = new ShisetsuSelectDialog.Controls(fieldName);
            }
            PublicProperties.prototype.getEditTypes = function () {
                var editTypes = new UZA.EditTypeForPublicProperty();

                return editTypes;
            };
            return PublicProperties;
        })();
        ShisetsuSelectDialog.PublicProperties = PublicProperties;
    })(AFA.ShisetsuSelectDialog || (AFA.ShisetsuSelectDialog = {}));
    var ShisetsuSelectDialog = AFA.ShisetsuSelectDialog;
})(AFA || (AFA = {}));
</script>
  
   
   
   
   
     
     
   
   
   
   
     <script class="RamlConvert" type="text/javascript">
var AFA= AFA? AFA: {};
AFA['RYOJIKANSELECTDIALOG'] = {};
AFA['RYOJIKANSELECTDIALOG'].RyojikanSelectDialogRequest = function(parentFieldName){ 
var paramArray = [];var parameter0 = Uz.JSControlUtil.getJSControl(parentFieldName + '_RyojikanSelectDialog').getProperty();parameter0.dgRyojikanSelect = Uz.JSControlUtil.getJSControl(parentFieldName + '_dgRyojikanSelect').getProperty();parameter0.btnCancel = Uz.JSControlUtil.getJSControl(parentFieldName + '_btnCancel').getProperty();paramArray.push(parameter0);
return paramArray;
 };
</script><script>var AFA;
(function (AFA) {
    (function (RyojikanSelectDialog) {
        var Events = (function () {
            function Events() {
            }
            Events.onSelectBySelectButton_closeOK = function () {
                return "onSelectBySelectButton_closeOK";
            };

            Events.CloseCancel = function () {
                return "CloseCancel";
            };
            return Events;
        })();
        RyojikanSelectDialog.Events = Events;

        var Controls = (function () {
            function Controls(fieldName) {
                this._myName = fieldName;
            }
            Controls.myType = function () {
                return "RyojikanSelectDialog";
            };

            Controls.prototype.convFiledNameSelf = function () {
                return this._myName + "_" + AFA.RyojikanSelectDialog.Controls.myType();
            };

            Controls.prototype.convFiledName = function (fieldName) {
                return this._myName + "_" + AFA.RyojikanSelectDialog.Controls.myType() + "_" + fieldName;
            };

            Controls.prototype.RyojikanSelectDialog = function () {
                return new UZA.Panel(this.convFiledNameSelf());
            };

            Controls.prototype.dgRyojikanSelect = function () {
                return new UZA.DataGrid(this.convFiledName("dgRyojikanSelect"));
            };

            Controls.prototype.btnCancel = function () {
                return new UZA.Button(this.convFiledName("btnCancel"));
            };
            return Controls;
        })();
        RyojikanSelectDialog.Controls = Controls;
    })(AFA.RyojikanSelectDialog || (AFA.RyojikanSelectDialog = {}));
    var RyojikanSelectDialog = AFA.RyojikanSelectDialog;
})(AFA || (AFA = {}));
var AFA;
(function (AFA) {
    (function (RyojikanSelectDialog) {
        var ModeController = (function () {
            function ModeController(fieldName) {
                this.fieldName = fieldName;
                this.controls = new RyojikanSelectDialog.Controls(fieldName);
            }
            ModeController.prototype.Properties = function () {
                return new UZA.CommonChildDiv(this.fieldName);
            };

            ModeController.prototype.PublicProperties = function () {
                return new RyojikanSelectDialog.PublicProperties(this.fieldName);
            };
            return ModeController;
        })();
        RyojikanSelectDialog.ModeController = ModeController;
    })(AFA.RyojikanSelectDialog || (AFA.RyojikanSelectDialog = {}));
    var RyojikanSelectDialog = AFA.RyojikanSelectDialog;
})(AFA || (AFA = {}));

var AFA;
(function (AFA) {
    (function (RyojikanSelectDialog) {
        var PublicProperties = (function () {
            function PublicProperties(fieldName) {
                this.fieldName = fieldName;
                this.controls = new RyojikanSelectDialog.Controls(fieldName);
            }
            PublicProperties.prototype.getEditTypes = function () {
                var editTypes = new UZA.EditTypeForPublicProperty();

                return editTypes;
            };
            return PublicProperties;
        })();
        RyojikanSelectDialog.PublicProperties = PublicProperties;
    })(AFA.RyojikanSelectDialog || (AFA.RyojikanSelectDialog = {}));
    var RyojikanSelectDialog = AFA.RyojikanSelectDialog;
})(AFA || (AFA = {}));
</script></div>
